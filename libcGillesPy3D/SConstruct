import distutils.sysconfig
import os

# Make sure python3 dev headers are installed
# On Ubuntu, python3-dev (might need version-specific, e.g. python3.11-dev, which might require adding new repos)
# On Fedora, python3-devel (might need version-specific, e.g. python3.11-devel)
pyinc = distutils.sysconfig.get_python_inc()

env = Environment(
    CXX="g++",
    CXXFLAGS=[
        "-std=c++17",
        "-fPIC",
    ],
    CPPPATH=[
        Dir("include"),
        Dir("external/ANN/include"),
        Dir("external/Sundials/include"),
        Dir("external/Sundials/src"),
        Dir("external/Sundials/cmake-build/default/include"),
        Dir("external/Sundials/src/sundials"),
        pyinc,
    ],
    LIBPATH=[
        Dir("obj"),
        Dir("obj/external/Sundials"),
    ],
    ENV=os.environ,
)

VariantDir("obj", "src", duplicate=False)
VariantDir("obj/external", "external", duplicate=False)
libcgillespy3d = SConscript("obj/SConscript", exports=["env"])
sundials = SConscript([
    "obj/external/Sundials/SConscript",
], exports=["env"])

# Build SWIG library
# TEMPORARY: run shell script manually to build
#            non-portable, replace later!!!
swig = env.Command("obj/libcgillespy3d_wrap.cxx", ["include/libcgillespy3d.i", libcgillespy3d], [
    Mkdir("bin"),
    "swig -c++ -python -features autodoc -o obj/libcgillespy3d_wrap.cxx -outdir bin $SOURCE",
])
env.Clean(swig, ["bin/libcgillespy3d.py"])

py_lib = env.SharedLibrary("bin/_libcgillespy3d.so", [swig], LIBS=["cgillespy3d", sundials], SHLIBPREFIX="")

